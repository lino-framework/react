.. _react.guide:

==========================
Lino React Developer Guide
==========================

First you need to install a Lino :term:`contributor environment` as described in
the :ref:`lino.dev`.


Introduction to NodeJS and npm
==============================

- https://www.npmjs.com/about
- https://www.freecodecamp.org/news/what-is-npm-a-node-package-manager-tutorial-for-beginners/

npm is an open-source software package manager originally developed for Node.js,
but also used for other packages.  It is an interface to the npm repository. It
allows JavaScript developers to share packages quickly and easily.

npm packages are defined by a file named :file:`package.json` that must exist in
their top-level directory. This file is usually generated by :cmd:`npm init` and
later edited manually.


Presentation of some files
==========================

.. xfile:: package.json

  The npm package definition for lino_react.

  At the moment we don't publish lino_react as an npm package. That's not needed
  because the JS files are made available as Django static files inside the
  lino_react Python package.  The whole source code is published on github.

  The :xfile:`package.json` for lino_react mainly defines a few "scripts" (i.e.
  commands)::

    "scripts": {
      "debug": "webpack --mode none ./lino_react/react/index.js --output ./lino_react/react/static/react/main.js; npm run move_static",
      "dev": "webpack --mode development ./lino_react/react/index.js --output ./lino_react/react/static/react/main.js; npm run move_static",
      "build": "webpack --mode production ./lino_react/react/index.js --output ./lino_react/react/static/react/main.js; npm run move_static",
      "move_static": "rm -rf ./lino_react/react/static/media; mv  ./lino_react/react/static/react/static/media ./lino_react/react/static/;",
      "build_css": "node_modules/node-sass-chokidar/bin/node-sass-chokidar ./lino_react/react/components/layout -o ./lino_react/react/components/layout",
    },

  The commands debug, dev and build are very similar, their only difference is
  the `--mode <https://webpack.js.org/configuration/mode/>`__ option,
  which tells webpack to use its built-in optimizations accordingly.

  `webpack <https://webpack.js.org/>`__ is a tool that bundles all the "assets"
  into a set of deployable files (.js, .css etc).
  We use it to compile the :file:`index.js` file into the :file:`main.js` file.

  TODO: What is the "move_static" command? Why is it needed?

  Our ``build_css`` script compiles scss files to css files. We need to run it
  only after changing one of our scss files which are located in
  :file:`lino_react/react/components/layout`.

  ``build_css`` runs `node-sass-chokidar
  <https://www.npmjs.com/package/node-sass-chokidar>`__, which is a "thin
  wrapper around node-sass executable to use chokidar instead of Gaze when
  watching files." `Node-sass <https://github.com/sass/node-sass>`__ is "a
  library that provides binding for Node.js to LibSass, the C version of the
  popular stylesheet preprocessor, Sass. It allows you to natively compile .scss
  files to css at incredible speed and automatically via a connect middleware."



.. xfile:: webpack.config.js

  Our configuration file for webpack.  TODO: what does it do?

.. xfile:: lino_react/react/index.js

  Contains a single line of code::

    import App from "./components/App";

.. xfile:: lino_react/react/static/react/main.js

  Contains a lot of compressed JS code.

  It is bigger than standard and therefore causes webpack to issue a warning::

    WARNING in asset size limit: The following asset(s) exceed the recommended size limit (244 KiB).
    This can impact web performance.
    Assets:
      main.js (1.24 MiB)



Then here we go::

    $ sudo apt install nodejs npm

    $ npm install

    $ go react
    $ mkdir -p lino_react/react/static/media

    $ npm run build

Now let's do a local change and test it.



.. xfile:: package-lock.json
.. xfile:: node_modules/
